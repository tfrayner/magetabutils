/* $Id$ */

/* These MySQL statements were used to create the initial DBIC
   database instance from which the DBIx::Class schema was
   autogenerated. All subsequent changes were made to the schema
   classes themselves, rendering this file obsolete. We keep it only
   for reference. */

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;


DROP TABLE IF EXISTS mt_base;
CREATE TABLE mt_base (
  id INT(11) NOT NULL AUTO_INCREMENT,
  namespace VARCHAR(255) DEFAULT NULL,
  authority VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_node;
CREATE TABLE mt_node (
  id INT(11) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_edge;
CREATE TABLE mt_edge (
  id INT(11) NOT NULL,
  input_node_id INT(11) NOT NULL,
  output_node_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (input_node_id),
  KEY (output_node_id),
  CONSTRAINT FOREIGN KEY (input_node_id) REFERENCES mt_node (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (output_node_id) REFERENCES mt_node (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_material;
CREATE TABLE mt_material (
  id INT(11) NOT NULL,
  name VARCHAR(255) NOT NULL,
  description TEXT DEFAULT NULL,
  material_type_id INT(11) DEFAULT NULL,
  PRIMARY KEY (id),
  KEY (material_type_id),
  CONSTRAINT FOREIGN KEY (material_type_id) REFERENCES mt_controlled_term (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_node (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_controlled_term;
CREATE TABLE mt_controlled_term (
  id INT(11) NOT NULL,
  category VARCHAR(255) NOT NULL,
  value VARCHAR(255) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_database_entry (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_database_entry;
CREATE TABLE mt_database_entry (
  id INT(11) NOT NULL,
  accession VARCHAR(255) DEFAULT NULL,
  term_source_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (term_source_id),
  CONSTRAINT FOREIGN KEY (term_source_id) REFERENCES mt_term_source (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_term_source;
CREATE TABLE mt_term_source (
  id INT(11) NOT NULL,
  name VARCHAR(255) NOT NULL,
  uri VARCHAR(255) DEFAULT NULL,
  version VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_source;
CREATE TABLE mt_source (
  id INT(11) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_material (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_sample;
CREATE TABLE mt_sample (
  id INT(11) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_material (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_extract;
CREATE TABLE mt_extract (
  id INT(11) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_material (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_labeled_extract;
CREATE TABLE mt_labeled_extract (
  id INT(11) NOT NULL,
  label_id INT(11) DEFAULT NULL,
  PRIMARY KEY (id),
  KEY (label_id),
  CONSTRAINT FOREIGN KEY (label_id) REFERENCES mt_controlled_term (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_material (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_source_provider_link;
CREATE TABLE mt_source_provider_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  source_id INT(11) NOT NULL,
  provider_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (source_id),
  KEY (provider_id),
  CONSTRAINT FOREIGN KEY (source_id) REFERENCES mt_source (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (provider_id) REFERENCES mt_contact (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_material_characteristic_link;
CREATE TABLE mt_material_characteristic_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  material_id INT(11) NOT NULL,
  characteristic_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (material_id),
  KEY (characteristic_id),
  CONSTRAINT FOREIGN KEY (material_id) REFERENCES mt_material (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (characteristic_id) REFERENCES mt_controlled_term (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_material_measurement_link;
CREATE TABLE mt_material_measurement_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  material_id INT(11) NOT NULL,
  measurement_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (material_id),
  KEY (measurement_id),
  CONSTRAINT FOREIGN KEY (material_id) REFERENCES mt_material (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (measurement_id) REFERENCES mt_measurement (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_contact;
CREATE TABLE mt_contact (
  id INT(11) NOT NULL,
  last_name VARCHAR(255) DEFAULT NULL,
  first_name VARCHAR(255) DEFAULT NULL,
  mid_initials VARCHAR(11) DEFAULT NULL,
  email VARCHAR(255) DEFAULT NULL,
  organization VARCHAR(255) DEFAULT NULL,
  phone VARCHAR(31) DEFAULT NULL,
  fax VARCHAR(31) DEFAULT NULL,
  address VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_contact_role_link;
CREATE TABLE mt_contact_role_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  contact_id INT(11) NOT NULL,
  role_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (contact_id),
  KEY (role_id),
  CONSTRAINT FOREIGN KEY (contact_id) REFERENCES mt_contact (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (role_id) REFERENCES mt_controlled_term (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Note that linking comment to all children of the base class is not
-- strictly correct; we may end up with comments in the database that
-- we can't serialize to MAGE-TAB. Since comments are legally
-- ignorable I'm going ahead anyway.
DROP TABLE IF EXISTS mt_comment;
CREATE TABLE mt_comment (
  id INT(11) NOT NULL,
  base_id INT(11) NOT NULL,
  name VARCHAR(255) NOT NULL,
  value VARCHAR(255) NOT NULL,
  PRIMARY KEY (id),
  KEY (base_id),
  CONSTRAINT FOREIGN KEY (base_id) REFERENCES mt_base (id) ON DELETE CASCADE, -- represents the commented upon; FIXME it would be nice to add a trigger to make sure that id != base_id, shame we can't in DBIC.
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE -- represents the comment
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_array_design;
CREATE TABLE mt_array_design (
  id INT(11) NOT NULL,
  name VARCHAR(255) NOT NULL,
  version VARCHAR(255) DEFAULT NULL,
  uri VARCHAR(255) DEFAULT NULL,
  provider VARCHAR(255) DEFAULT NULL,
  technology_type_id INT(11) DEFAULT NULL,
  surface_type_id INT(11) DEFAULT NULL,
  substrate_type_id INT(11) DEFAULT NULL,
  printing_protocol TEXT DEFAULT NULL,
  sequence_polymer_type_id INT(11) DEFAULT NULL,
  PRIMARY KEY (id),
  KEY (technology_type_id),
  KEY (surface_type_id),
  KEY (substrate_type_id),
  KEY (sequence_polymer_type_id),
  CONSTRAINT FOREIGN KEY (technology_type_id) REFERENCES mt_controlled_term (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (surface_type_id) REFERENCES mt_controlled_term (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (substrate_type_id) REFERENCES mt_controlled_term (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (sequence_polymer_type_id) REFERENCES mt_controlled_term (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_database_entry (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model. DesignElements should be reusable.
DROP TABLE IF EXISTS mt_array_design_design_element_link;
CREATE TABLE mt_array_design_design_element_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  array_design_id INT(11) NOT NULL,
  design_element_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (array_design_id),
  KEY (design_element_id),
  CONSTRAINT FOREIGN KEY (array_design_id) REFERENCES mt_array_design (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (design_element_id) REFERENCES mt_design_element (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_design_element;
CREATE TABLE mt_design_element (
  id INT(11) NOT NULL,
  chromosome VARCHAR(31) DEFAULT NULL,
  start_position INT(31) DEFAULT NULL,
  end_position INT(31) DEFAULT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_assay;
CREATE TABLE mt_assay (
  id INT(11) NOT NULL,
  array_design_id INT(11) DEFAULT NULL,
  technology_type_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FOREIGN KEY (array_design_id) REFERENCES mt_array_design (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (technology_type_id) REFERENCES mt_controlled_term (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_event (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_composite_element;
CREATE TABLE mt_composite_element (
  id INT(11) NOT NULL,
  name VARCHAR(255) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_design_element (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_composite_element_database_entry_link;
CREATE TABLE mt_composite_element_database_entry_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  composite_element_id INT(11) NOT NULL,
  database_entry_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (composite_element_id),
  KEY (database_entry_id),
  CONSTRAINT FOREIGN KEY (composite_element_id) REFERENCES mt_composite_element (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (database_entry_id) REFERENCES mt_database_entry (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_data;
CREATE TABLE mt_data (
  id INT(11) NOT NULL,
  uri VARCHAR(255) NOT NULL,
  data_type_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (data_type_id),
  CONSTRAINT FOREIGN KEY (data_type_id) REFERENCES mt_controlled_term (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_node (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_data_acquisition;
CREATE TABLE mt_data_acquisition (
  id INT(11) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_event (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_data_file;
CREATE TABLE mt_data_file (
  id INT(11) NOT NULL,
  format_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (format_id),
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_controlled_term (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_data (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_data_matrix;
CREATE TABLE mt_data_matrix (
  id INT(11) NOT NULL,
  row_identifier_type VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_data (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_matrix_row;
CREATE TABLE mt_matrix_row (
  id INT(11) NOT NULL,
  data_matrix_id INT(11) NOT NULL,
  row_number INT(31) NOT NULL,
  design_element_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (data_matrix_id),
  KEY (design_element_id),  
  CONSTRAINT FOREIGN KEY (data_matrix_id) REFERENCES mt_data_matrix (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (design_element_id) REFERENCES mt_design_element (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_matrix_column;
CREATE TABLE mt_matrix_column (
  id INT(11) NOT NULL,
  data_matrix_id INT(11) NOT NULL,
  column_number INT(31) NOT NULL,
  quantitation_type_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (data_matrix_id),
  KEY (quantitation_type_id),  
  CONSTRAINT FOREIGN KEY (data_matrix_id) REFERENCES mt_data_matrix (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (quantitation_type_id) REFERENCES mt_controlled_term (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_matrix_column_node_link;
CREATE TABLE mt_matrix_column_node_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  matrix_column_id INT(11) NOT NULL,
  node_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (matrix_column_id),
  KEY (node_id),
  CONSTRAINT FOREIGN KEY (matrix_column_id) REFERENCES mt_matrix_column (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (node_id) REFERENCES mt_node (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_protocol_application;
CREATE TABLE mt_protocol_application (
  id INT(11) NOT NULL,
  edge_id INT(11) NOT NULL,
  protocol_id INT(11) NOT NULL,
  date DATE DEFAULT NULL,
  PRIMARY KEY (id),
  KEY (edge_id),
  KEY (protocol_id),
  CONSTRAINT FOREIGN KEY (edge_id) REFERENCES mt_edge (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (protocol_id) REFERENCES mt_protocol (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_protocol_application_performer_link;
CREATE TABLE mt_protocol_application_performer_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  protocol_application_id INT(11) NOT NULL,
  performer_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (protocol_application_id),
  KEY (performer_id),
  CONSTRAINT FOREIGN KEY (protocol_application_id) REFERENCES mt_protocol_application (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (performer_id) REFERENCES mt_contact (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_parameter_value;
CREATE TABLE mt_parameter_value (
  id INT(11) NOT NULL,
  protocol_application_id INT(11) NOT NULL,
  measurement_id INT(11) DEFAULT NULL,
  protocol_parameter_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (protocol_application_id),
  KEY (protocol_parameter_id),
  KEY (measurement_id),
  CONSTRAINT FOREIGN KEY (protocol_application_id) REFERENCES mt_protocol_application (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (protocol_parameter_id) REFERENCES mt_protocol_parameter (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (measurement_id) REFERENCES mt_measurement (id) ON DELETE RESTRICT, -- play it safe with the multiply-linked measurement class (also attaches to material).
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_event;
CREATE TABLE mt_event (
  id INT(11) NOT NULL,
  name VARCHAR(255) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_node (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- We assume factors are not a universal platonic concept, but isolated within investigations.
DROP TABLE IF EXISTS mt_factor;
CREATE TABLE mt_factor (
  id INT(11) NOT NULL,
  investigation_id INT(11) NOT NULL,
  name VARCHAR(255) NOT NULL,
  factor_type_id INT(11) DEFAULT NULL,
  PRIMARY KEY (id),
  KEY (investigation_id),
  KEY (factor_type_id),
  CONSTRAINT FOREIGN KEY (investigation_id) REFERENCES mt_investigation (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (factor_type_id) REFERENCES mt_controlled_term (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_factor_value;
CREATE TABLE mt_factor_value (
  id INT(11) NOT NULL,
  measurement_id INT(11) DEFAULT NULL,
  term_id INT(11) DEFAULT NULL,
  factor_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (measurement_id),
  KEY (term_id),
  KEY (factor_id),
  CONSTRAINT FOREIGN KEY (measurement_id) REFERENCES mt_measurement (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (term_id) REFERENCES mt_controlled_term (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (factor_id) REFERENCES mt_factor (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Again, feature is scoped within reporter; delete the reporter, we cascade delete the features.
DROP TABLE IF EXISTS mt_feature;
CREATE TABLE mt_feature (
  id INT(11) NOT NULL,
  block_col INT(11) NOT NULL,
  block_row INT(11) NOT NULL,
  col INT(11) NOT NULL,
  row INT(11) NOT NULL,
  reporter_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (reporter_id),
  CONSTRAINT FOREIGN KEY (reporter_id) REFERENCES mt_reporter (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_design_element (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_investigation;
CREATE TABLE mt_investigation (
  id INT(11) NOT NULL,
  title VARCHAR(255) NOT NULL,
  description TEXT DEFAULT NULL,
  date DATE DEFAULT NULL,
  public_release_date DATE DEFAULT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_investigation_contact_link;
CREATE TABLE mt_investigation_contact_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  investigation_id INT(11) NOT NULL,
  contact_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (investigation_id),
  KEY (contact_id),
  CONSTRAINT FOREIGN KEY (investigation_id) REFERENCES mt_investigation (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (contact_id) REFERENCES mt_contact (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_investigation_protocol_link;
CREATE TABLE mt_investigation_protocol_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  investigation_id INT(11) NOT NULL,
  protocol_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (investigation_id),
  KEY (protocol_id),
  CONSTRAINT FOREIGN KEY (investigation_id) REFERENCES mt_investigation (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (protocol_id) REFERENCES mt_protocol (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_investigation_publication_link;
CREATE TABLE mt_investigation_publication_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  investigation_id INT(11) NOT NULL,
  publication_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (investigation_id),
  KEY (publication_id),
  CONSTRAINT FOREIGN KEY (investigation_id) REFERENCES mt_investigation (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (publication_id) REFERENCES mt_publication (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_investigation_term_source_link;
CREATE TABLE mt_investigation_term_source_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  investigation_id INT(11) NOT NULL,
  term_source_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (investigation_id),
  KEY (term_source_id),
  CONSTRAINT FOREIGN KEY (investigation_id) REFERENCES mt_investigation (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (term_source_id) REFERENCES mt_term_source (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_investigation_design_type_link;
CREATE TABLE mt_investigation_design_type_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  investigation_id INT(11) NOT NULL,
  design_type_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (investigation_id),
  KEY (design_type_id),
  CONSTRAINT FOREIGN KEY (investigation_id) REFERENCES mt_investigation (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (design_type_id) REFERENCES mt_controlled_term (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_investigation_normalization_type_link;
CREATE TABLE mt_investigation_normalization_type_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  investigation_id INT(11) NOT NULL,
  normalization_type_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (investigation_id),
  KEY (normalization_type_id),
  CONSTRAINT FOREIGN KEY (investigation_id) REFERENCES mt_investigation (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (normalization_type_id) REFERENCES mt_controlled_term (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_investigation_replicate_type_link;
CREATE TABLE mt_investigation_replicate_type_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  investigation_id INT(11) NOT NULL,
  replicate_type_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (investigation_id),
  KEY (replicate_type_id),
  CONSTRAINT FOREIGN KEY (investigation_id) REFERENCES mt_investigation (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (replicate_type_id) REFERENCES mt_controlled_term (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_investigation_quality_control_type_link;
CREATE TABLE mt_investigation_quality_control_type_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  investigation_id INT(11) NOT NULL,
  quality_control_type_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (investigation_id),
  KEY (quality_control_type_id),
  CONSTRAINT FOREIGN KEY (investigation_id) REFERENCES mt_investigation (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (quality_control_type_id) REFERENCES mt_controlled_term (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_investigation_sdrf_link;
CREATE TABLE mt_investigation_sdrf_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  investigation_id INT(11) NOT NULL,
  sdrf_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (investigation_id),
  KEY (sdrf_id),
  CONSTRAINT FOREIGN KEY (investigation_id) REFERENCES mt_investigation (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (sdrf_id) REFERENCES mt_sdrf (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_sdrf;
CREATE TABLE mt_sdrf (
  id INT(11) NOT NULL,
  uri VARCHAR(255) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_sdrf_row;
CREATE TABLE mt_sdrf_row (
  id INT(11) NOT NULL,
  sdrf_id INT(11) NOT NULL,
  row_number INT(11) DEFAULT NULL,
  channel_id INT(11) DEFAULT NULL,
  PRIMARY KEY (id),
  KEY (sdrf_id),
  KEY (channel_id),
  CONSTRAINT FOREIGN KEY (sdrf_id) REFERENCES mt_sdrf (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (channel_id) REFERENCES mt_controlled_term (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_sdrf_node_link;
CREATE TABLE mt_sdrf_node_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  sdrf_id INT(11) NOT NULL,
  node_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (sdrf_id),
  KEY (node_id),
  CONSTRAINT FOREIGN KEY (sdrf_id) REFERENCES mt_sdrf (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (node_id) REFERENCES mt_node (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_sdrf_factor_value_link;
CREATE TABLE mt_sdrf_factor_value_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  sdrf_id INT(11) NOT NULL,
  factor_value_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (sdrf_id),
  KEY (factor_value_id),
  CONSTRAINT FOREIGN KEY (sdrf_id) REFERENCES mt_sdrf (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (factor_value_id) REFERENCES mt_factor_value (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_measurement;
CREATE TABLE mt_measurement (
  id INT(11) NOT NULL,
  measurement_type VARCHAR(255) NOT NULL,
  value VARCHAR(255) DEFAULT NULL,
  min_value VARCHAR(255) DEFAULT NULL,
  max_value VARCHAR(255) DEFAULT NULL,
  unit_id INT(11) DEFAULT NULL,
  PRIMARY KEY (id),
  KEY (unit_id),
  CONSTRAINT FOREIGN KEY (unit_id) REFERENCES mt_controlled_term (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_normalization;
CREATE TABLE mt_normalization (
  id INT(11) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_event (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_protocol;
CREATE TABLE mt_protocol (
  id INT(11) NOT NULL,
  name VARCHAR(255) NOT NULL,
  text TEXT DEFAULT NULL,
  software VARCHAR(255) DEFAULT NULL,
  hardware VARCHAR(255) DEFAULT NULL,
  protocol_type_id INT(11) DEFAULT NULL,
  contact VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id),
  KEY (protocol_type_id),
  CONSTRAINT FOREIGN KEY (protocol_type_id) REFERENCES mt_controlled_term (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_database_entry (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_protocol_parameter;
CREATE TABLE mt_protocol_parameter (
  id INT(11) NOT NULL,
  protocol_id INT(11) NOT NULL,
  name VARCHAR(255) NOT NULL,
  PRIMARY KEY (id),
  KEY (protocol_id),
  CONSTRAINT FOREIGN KEY (protocol_id) REFERENCES mt_protocol (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_publication;
CREATE TABLE mt_publication (
  id INT(11) NOT NULL,
  title VARCHAR(255) NOT NULL,
  author_list VARCHAR(512) DEFAULT NULL,
  pub_med_id VARCHAR(31) DEFAULT NULL,
  doi VARCHAR(255) DEFAULT NULL,
  status_id INT(11) DEFAULT NULL,
  PRIMARY KEY (id),
  KEY (status_id),
  CONSTRAINT FOREIGN KEY (status_id) REFERENCES mt_controlled_term (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_base (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS mt_reporter;
CREATE TABLE mt_reporter (
  id INT(11) NOT NULL,
  name VARCHAR(255) NOT NULL,
  sequence VARCHAR(512) DEFAULT NULL,
  control_type_id INT(11) DEFAULT NULL,
  PRIMARY KEY (id),
  KEY (control_type_id),
  CONSTRAINT FOREIGN KEY (control_type_id) REFERENCES mt_controlled_term (id) ON DELETE RESTRICT,
  CONSTRAINT FOREIGN KEY (id) REFERENCES mt_design_element (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_reporter_composite_element_link;
CREATE TABLE mt_reporter_composite_element_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  reporter_id INT(11) NOT NULL,
  composite_element_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (reporter_id),
  KEY (composite_element_id),
  CONSTRAINT FOREIGN KEY (reporter_id) REFERENCES mt_reporter (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (composite_element_id) REFERENCES mt_composite_element (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_reporter_database_entry_link;
CREATE TABLE mt_reporter_database_entry_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  reporter_id INT(11) NOT NULL,
  database_entry_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (reporter_id),
  KEY (database_entry_id),
  CONSTRAINT FOREIGN KEY (reporter_id) REFERENCES mt_reporter (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (database_entry_id) REFERENCES mt_database_entry (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- linking table not in main model.
DROP TABLE IF EXISTS mt_reporter_group_link;
CREATE TABLE mt_reporter_group_link (
  id INT(11) NOT NULL AUTO_INCREMENT,
  reporter_id INT(11) NOT NULL,
  group_id INT(11) NOT NULL,
  PRIMARY KEY (id),
  KEY (reporter_id),
  KEY (group_id),
  CONSTRAINT FOREIGN KEY (reporter_id) REFERENCES mt_reporter (id) ON DELETE CASCADE,
  CONSTRAINT FOREIGN KEY (group_id) REFERENCES mt_controlled_term (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

/* Notes here: SELECT is easy; introspect the ORM to get prefetch
   hashrefs for each class (based on where the ID columns point),
   memoize that code, filter out ID columns and bob's your
   lobster. INSERT/UPDATE are much harder, will need to cogitate some
   more. Probably a similar introspection method (either using the ORM
   or the Moose class heirarchy), passing off matched attributes as we
   rise through the inheritance chain? Don't forget to modify/create
   the base class first, but attrs should match as low as possible on
   the tree. Object instantiation following SELECT: this runs into
   complications when we consider relationships. Either we instantiate
   the entire MAGE-TAB DAG in response to a simple query, or we come
   up with a hack e.g. replacing relationship values with coderefs
   which replace themselves when called. We'd have to override the
   MAGE-TAB constructors to fool the type checks for this to work. */